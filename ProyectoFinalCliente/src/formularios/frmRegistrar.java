
package formularios;

import java.io.IOException;
import java.net.Socket;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SealedObject;
import javax.swing.JOptionPane;
import utiles.User;
import utiles.Utiles;

/**
 *
 * @author Alvaro Merino
 */
public class frmRegistrar extends javax.swing.JFrame {

    private Socket servidor;
    private PublicKey clavePublicaAjena;
    private PrivateKey clavePrivada;
   
    public frmRegistrar(Socket servidor, PublicKey clavePublicaAjena, PrivateKey clavePrivada) {
        initComponents();
        this.servidor = servidor;
        this.clavePublicaAjena = clavePublicaAjena;
        this.clavePrivada = clavePrivada;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPass1 = new javax.swing.JPasswordField();
        lblContraseña1 = new javax.swing.JLabel();
        btnIniciarSesion = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        lblContraseña = new javax.swing.JLabel();
        txtPass = new javax.swing.JPasswordField();
        txtUsuario = new javax.swing.JTextField();
        lblUsuario = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(txtPass1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 160, -1));

        lblContraseña1.setForeground(new java.awt.Color(240, 240, 240));
        lblContraseña1.setText("Repetir Contraseña: ");
        getContentPane().add(lblContraseña1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        btnIniciarSesion.setText("Volver...");
        btnIniciarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarSesionActionPerformed(evt);
            }
        });
        getContentPane().add(btnIniciarSesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, -1, -1));

        btnRegistrar.setText("Registrarse...");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, -1, -1));

        lblContraseña.setForeground(new java.awt.Color(240, 240, 240));
        lblContraseña.setText("Contraseña: ");
        getContentPane().add(lblContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, -1, -1));
        getContentPane().add(txtPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 160, -1));

        txtUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsuarioActionPerformed(evt);
            }
        });
        getContentPane().add(txtUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 160, -1));

        lblUsuario.setForeground(new java.awt.Color(240, 240, 240));
        lblUsuario.setText("Usuario:");
        getContentPane().add(lblUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/pareja.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 290));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsuarioActionPerformed

    private void btnIniciarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarSesionActionPerformed
        try {
            // TODO add your handling code here:
            frmLogin login = new frmLogin();
            login.setVisible(true);
            this.dispose();
        } catch (IOException ex) {
            Logger.getLogger(frmRegistrar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnIniciarSesionActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
        String pwd = Utiles.recorrerPassword(txtPass.getPassword());
        String pwd1 = Utiles.recorrerPassword(txtPass1.getPassword());
        
        //vamos a comprobar que los campos no estan vacios
        if(txtUsuario.getText().equals("")||pwd.equals("") || pwd1.equals("")){
            JOptionPane.showMessageDialog(null,"Todos los campos deben de estar rellenados", "ERROR", JOptionPane.ERROR_MESSAGE);
            
        }else{
            if(Utiles.comprobarPassword(pwd1,pwd)){
                try{
                    String id = UUID.randomUUID().toString();
                    String algoritmoPWD = Utiles.pwdAlgoritmo(pwd);
                    
                    User user = new User(id,txtUsuario.getText(),algoritmoPWD);
                    SealedObject objetocifrado = Utiles.cifrarObjeto(user, clavePublicaAjena);
                    Utiles.enviarObject(servidor, objetocifrado);
                }catch(IOException | InvalidKeyException | NoSuchAlgorithmException | IllegalBlockSizeException | NoSuchPaddingException e){
                    System.out.println("Error: "+e.getMessage());
                }
            }else{
                JOptionPane.showMessageDialog(null,"Las contraseñas con coinciden", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIniciarSesion;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblContraseña;
    private javax.swing.JLabel lblContraseña1;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JPasswordField txtPass1;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
